`Ljava/util/Map;.clear:()V`:
  ~this
;

`Ljava/util/Map;.clone:()Ljava/lang/Object;`:
  ret = this
;

`Ljava/util/Map;.entrySet:()Ljava/util/Set;`:
  ret = java.util.HashSet@~
  ret.items = this.entries
;

`Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;`:
  ret = this.entries.value // can be improved
;

`Ljava/util/Map;.keySet:()Ljava/util/Set;`:
  ret = java.util.HashSet@~
  ret.items = this.entries.key
;

`Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;`:
  ret = this.entries.value
  this.entries.key += arg:0
  this.entries.value += arg:1
;

`Ljava/util/Map;.putAll:(Ljava/util/Map;)V`:
  this.entries += arg:0.entries
;

`Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;`:
  ret = this.entries.value
;

`Ljava/util/Map;.values:()Ljava/util/Collection;`:
  ret = java.util.HashSet@~
  ret.items = this.entries.value
;